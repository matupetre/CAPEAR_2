#include "LPC17xx.h"
#include "capear_definiciones.h"
#include "uip.h"

//ip a pingear
#define IP1 192
#define IP2 168
#define IP3 0
#define IP4 3


void pong(char* destipaddr)

	{
	//PROPOSITO DE LA FUNCION: emitir un  PING!!!

	uip_ip_addr_t pong_ip;	//defino variable para contener la IP en formato de uIP

	pong_ip=uip_ipaddr(pong_ip,IP1,IP2,IP3,IP4); //establezco la IP en formato uIP

	//Encabezado del datagrama IP
	ICMPBUF->vhl=0x45;
	ICMPBUF->tos=0x00;
	ICMPBUF->len[0]=0x00;
	ICMPBUF->len[1]=0x3C;
	ICMPBUF->ipid[0]=0x00;
	ICMPBUF->ipid[1]=0x3C;
	ICMPBUF->ipoffset[0]=0x00;
	ICMPBUF->ipoffset[1]=0x3C;
	ICMPBUF->ttl=128;
	ICMPBUF->proto=1;	//indica que el datagrama contiene un ICMP
	ICMPBUF->ipchksum=0x4a5c;	//copiado de un ping entrante
	ICMPBUF->srcipaddr[0]=HTONS((SRV_IP1 << 8) | SRV_IP2);
	ICMPBUF->srcipaddr[1]=HTONS((SRV_IP3 << 8) | SRV_IP4);
	ICMPBUF->destaddr[0]=HTONS((IP1 << 8) | IP2);
	ICMPBUF->destaddr[1]=HTONS((IP3 << 8) | IP4);

	//Encabezado del ICMP
	ICMPBUF->type=8;			//indica PING ECHO REQUEST (la respuesta contiene un cero)
	ICMPBUF->icode=0;
	ICMPBUF->icmpchksum=0x4a5c;	//copiado de un ping entrante
	ICMPBUF->id=0x0200;
	ICMPBUF->seqno=1;

	//la siguiente variable es global!
	uip_len=0x3C;

	if(uip_len > 0) {
		uip_arp_out();
		tapdev_send(uip_buf,uip_len);
	}

	//pero hasta que se descule lo anterior...
	//se togglea el puerto 0 (LED2 por ahora) para indicar que
	//se recibio una respuesta a nuestro PING enviado.
	PRT0_PIO->FIOMASK = 0;
	PRT0_PIO->FIOPIN ^= (1 << PRT0_pin);
	};

